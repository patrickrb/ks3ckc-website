name: üß™ E2E Tests
on:
  push:
    branches:
      - master
      - main
      - develop
      - staging
  pull_request:
    branches:
      - master
      - main
      - develop
      - staging

jobs:
  E2E:
    name: Playwright E2E Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:v1.43.1-jammy
    env:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_DEV_ENV_NAME: tests
      DATABASE_URL: postgres://startui:startui@postgres:5432/startui
      NEXT_PUBLIC_IS_DEMO: false
      AUTH_SECRET: Replace me with `openssl rand -base64 32` generated secret
      EMAIL_SERVER: smtp://username:password@localhost:1025
      EMAIL_FROM: Start UI <noreply@example.com>
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: startui
          POSTGRES_USER: startui
          POSTGRES_DB: startui

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - run: pnpm install

      # - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      # - uses: pnpm/action-setup@v3
      #   name: Install pnpm
      #   with:
      #     version: 8
      #     run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ env.cache-name }}-
            ${{ runner.os }}-pnpm-store-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install
        
      - name: Install system dependencies for Playwright
        run: |
          apt-get update
          apt-get install -y libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdbus-1-3 \
            libdrm2 \
            libgbm1 \
            libasound2-dev \
            libatspi2.0-0 \
            libxcomposite1 \
            libxdamage1 \
            libxfixes3 \
            libxrandr2 \
            libxkbcommon0 \
            libx11-6 \
            libxcb1 \
            libxext6 \
            libxtst6 \
            libpango-1.0-0 \
            libcairo2 \
            libnss3 \
            libnspr4 \
            libxss1 \
            libffi-dev \
            libx264-dev

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps

      - name: Wait for DB and migrate
        run: |
          for i in {1..20}; do
            if pnpm db:push --accept-data-loss; then
              echo "‚úÖ DB migration successful"
              break
            fi
            echo "‚è≥ Waiting for DB to be ready..."
            sleep 3
          done

      - name: Migrate database
        run: pnpm db:push

      - name: Add default data into database
        run: pnpm db:seed

      - name: Run Playwright tests
        run: pnpm e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
