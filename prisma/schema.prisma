generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountStatus {
  // User has registered and verified their email
  ENABLED
  // User has been disabled and can't login anymore
  DISABLED
  // User did register, but has not verified their email yet.
  NOT_VERIFIED
}

model User {
  id             String        @id @default(cuid())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  name           String?
  email          String        @unique
  accountStatus  AccountStatus @default(NOT_VERIFIED)
  image          String?
  authorizations String[]      @default(["APP"])
  language       String        @default("en")
  lastLoginAt    DateTime?
  blogs          Blogs[]
  news           News[]
}

model VerificationToken {
  userId        String
  code          String
  token         String   @unique
  expires       DateTime
  lastAttemptAt DateTime @updatedAt
  attempts      Int      @default(0)
  // Useful to change the user email. This model will contains the next user
  // email, waiting for the user to validate it.
  email         String?
}

model Repository {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @unique
  link        String
  description String?
}

model Blogs {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  content     String
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
}

model News {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  content     String
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
}

model Member {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  callsign  String   @unique
  active    Boolean  @default(true)
}